// Generated by Dagger (https://dagger.dev).
package com.nadi.data.di;

import com.nadi.core.movie.MovieGateway;
import com.nadi.data.network.MovieAPIs;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideTestDataGatewayFactory implements Factory<MovieGateway> {
  private final Provider<MovieAPIs> movieAPIsProvider;

  public AppModule_ProvideTestDataGatewayFactory(Provider<MovieAPIs> movieAPIsProvider) {
    this.movieAPIsProvider = movieAPIsProvider;
  }

  @Override
  public MovieGateway get() {
    return provideTestDataGateway(movieAPIsProvider.get());
  }

  public static AppModule_ProvideTestDataGatewayFactory create(
      Provider<MovieAPIs> movieAPIsProvider) {
    return new AppModule_ProvideTestDataGatewayFactory(movieAPIsProvider);
  }

  public static MovieGateway provideTestDataGateway(MovieAPIs movieAPIs) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideTestDataGateway(movieAPIs));
  }
}
