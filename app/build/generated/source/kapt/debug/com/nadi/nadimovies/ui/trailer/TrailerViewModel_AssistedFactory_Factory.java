// Generated by Dagger (https://dagger.dev).
package com.nadi.nadimovies.ui.trailer;

import com.nadi.core.trailer.TrailerUseCase;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TrailerViewModel_AssistedFactory_Factory implements Factory<TrailerViewModel_AssistedFactory> {
  private final Provider<TrailerUseCase> trailerUseCaseProvider;

  public TrailerViewModel_AssistedFactory_Factory(Provider<TrailerUseCase> trailerUseCaseProvider) {
    this.trailerUseCaseProvider = trailerUseCaseProvider;
  }

  @Override
  public TrailerViewModel_AssistedFactory get() {
    return newInstance(trailerUseCaseProvider);
  }

  public static TrailerViewModel_AssistedFactory_Factory create(
      Provider<TrailerUseCase> trailerUseCaseProvider) {
    return new TrailerViewModel_AssistedFactory_Factory(trailerUseCaseProvider);
  }

  public static TrailerViewModel_AssistedFactory newInstance(
      Provider<TrailerUseCase> trailerUseCase) {
    return new TrailerViewModel_AssistedFactory(trailerUseCase);
  }
}
