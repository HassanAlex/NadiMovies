// Generated by data binding compiler. Do not edit!
package com.nadi.nadimovies.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.nadi.core.movie.Movie;
import com.nadi.nadimovies.R;
import com.nadi.nadimovies.ui.details.SimilarAdapter;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DesignSimilarBinding extends ViewDataBinding {
  @NonNull
  public final ImageView movieImg;

  @NonNull
  public final TextView movieNameTxt;

  @NonNull
  public final ImageView rateIcon;

  @NonNull
  public final TextView rateTxt;

  @Bindable
  protected Movie.Result mMovie;

  @Bindable
  protected SimilarAdapter.OnClickListener mClickListener;

  protected DesignSimilarBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView movieImg, TextView movieNameTxt, ImageView rateIcon, TextView rateTxt) {
    super(_bindingComponent, _root, _localFieldCount);
    this.movieImg = movieImg;
    this.movieNameTxt = movieNameTxt;
    this.rateIcon = rateIcon;
    this.rateTxt = rateTxt;
  }

  public abstract void setMovie(@Nullable Movie.Result movie);

  @Nullable
  public Movie.Result getMovie() {
    return mMovie;
  }

  public abstract void setClickListener(@Nullable SimilarAdapter.OnClickListener clickListener);

  @Nullable
  public SimilarAdapter.OnClickListener getClickListener() {
    return mClickListener;
  }

  @NonNull
  public static DesignSimilarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.design_similar, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DesignSimilarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DesignSimilarBinding>inflateInternal(inflater, R.layout.design_similar, root, attachToRoot, component);
  }

  @NonNull
  public static DesignSimilarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.design_similar, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DesignSimilarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DesignSimilarBinding>inflateInternal(inflater, R.layout.design_similar, null, false, component);
  }

  public static DesignSimilarBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DesignSimilarBinding bind(@NonNull View view, @Nullable Object component) {
    return (DesignSimilarBinding)bind(component, view, R.layout.design_similar);
  }
}
